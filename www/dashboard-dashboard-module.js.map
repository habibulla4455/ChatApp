{"version":3,"sources":["webpack:///./node_modules/rxjs-compat/_esm5/observable/interval.js","webpack:///./src/app/common/shared/components/join-room-confirmation-dialog/join-room-confirmation-dialog.component.html","webpack:///./src/app/common/shared/components/join-room-confirmation-dialog/join-room-confirmation-dialog.component.scss","webpack:///./src/app/common/shared/components/join-room-confirmation-dialog/join-room-confirmation-dialog.component.ts","webpack:///./src/app/common/shared/components/new-room-dialog/new-room-dialog.component.html","webpack:///./src/app/common/shared/components/new-room-dialog/new-room-dialog.component.scss","webpack:///./src/app/common/shared/components/new-room-dialog/new-room-dialog.component.ts","webpack:///./src/app/common/shared/pipes/timestamp4.pipe.ts","webpack:///./src/app/dashboard/dashboard-routing.module.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/drawer-content/drawer-content.component.html","webpack:///./src/app/dashboard/drawer-content/drawer-content.component.scss","webpack:///./src/app/dashboard/drawer-content/drawer-content.component.ts","webpack:///./src/app/dashboard/main/main.component.html","webpack:///./src/app/dashboard/main/main.component.scss","webpack:///./src/app/dashboard/main/main.component.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["export { interval } from 'rxjs';\n//# sourceMappingURL=interval.js.map","module.exports = \"<div id=\\\"container\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"confirmationForm\\\">\\n    <mat-form-field color=\\\"accent\\\">\\n      <mat-label>Password</mat-label>\\n      <input matInput type=\\\"text\\\" formControlName=\\\"password\\\">\\n      <mat-error *ngIf=\\\"confirmationForm.invalid\\\">This is required.</mat-error>\\n    </mat-form-field>\\n\\n    <button mat-raised-button>JOIN ROOM</button>\\n  </form>\\n</div>\\n\"","module.exports = \"#container {\\n  width: 50vw; }\\n  #container .mat-form-field {\\n    width: 100%; }\\n  #container .mat-raised-button {\\n    width: 100%; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { FirestoreService } from '../../../core/services/firestore.service';\nimport { SharedService } from '../../../core/services/shared.service';\n\n@Component({\n  selector: 'app-join-room-confirmation-dialog',\n  templateUrl: './join-room-confirmation-dialog.component.html',\n  styleUrls: ['./join-room-confirmation-dialog.component.scss']\n})\nexport class JoinRoomConfirmationDialogComponent implements OnInit {\n\n  confirmationForm: FormGroup;\n\n  constructor(@Inject(FormBuilder) fb: FormBuilder, private router: Router, private route: ActivatedRoute, private dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<JoinRoomConfirmationDialogComponent>, private firestore: FirestoreService, private sharedService: SharedService) {\n    this.confirmationForm = fb.group({\n      'password': [ '', [ Validators.required ] ],\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n\n    if (this.confirmationForm.invalid) return;\n\n    const roomPassword = this.data.room.room_password;\n    const enteredPassword = this.confirmationForm.value.password;\n\n    if (roomPassword === enteredPassword) {\n      this.dialogRef.close(true);\n    } else {\n      alert('wrong password');\n      this.confirmationForm.patchValue({ 'password': '' });\n    }\n\n  }\n\n}\n","module.exports = \"<div id=\\\"container\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"newRoomForm\\\">\\n    <mat-form-field color=\\\"accent\\\">\\n      <mat-label>Room name</mat-label>\\n      <input matInput type=\\\"text\\\" formControlName=\\\"room_name\\\">\\n      <mat-error *ngIf=\\\"room_name !== null\\\">\\n        <mat-error *ngIf=\\\"room_name.required\\\">This is required.</mat-error>\\n        <mat-error *ngIf=\\\"room_name.maxlength\\\">Room name must be less than 17 characters.</mat-error>\\n        <mat-error *ngIf=\\\"room_name.minlength\\\">Room name must be greater than 5 characters.</mat-error>\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field color=\\\"accent\\\">\\n      <mat-label>Number of participants</mat-label>\\n      <input matInput type=\\\"number\\\" formControlName=\\\"num_participants\\\">\\n      <mat-error *ngIf=\\\"num_participants !== null\\\">\\n        <mat-error *ngIf=\\\"num_participants.required\\\">This is required.</mat-error>\\n        <mat-error *ngIf=\\\"num_participants.max\\\">Participants must be less than 51.</mat-error>\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field color=\\\"accent\\\">\\n      <mat-label>Room password</mat-label>\\n      <input matInput type=\\\"text\\\" formControlName=\\\"room_password\\\">\\n      <mat-error *ngIf=\\\"room_password !== null\\\">\\n        <mat-error *ngIf=\\\"room_password.required\\\">This is required.</mat-error>\\n        <mat-error *ngIf=\\\"room_password.maxlength\\\">Room name must be less than 7 characters.</mat-error>\\n        <mat-error *ngIf=\\\"room_password.minlength\\\">Room name must be greater than 2 characters.</mat-error>\\n      </mat-error>\\n    </mat-form-field>\\n    <button mat-raised-button>CREATE ROOM</button>\\n  </form>\\n</div>\\n\"","module.exports = \"#container {\\n  width: 50vw; }\\n  #container .mat-form-field {\\n    width: 100%; }\\n  #container .mat-raised-button {\\n    margin-top: 3vh;\\n    width: 100%; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { MatDialog } from '@angular/material';\nimport { FirestoreService } from '../../../core/services/firestore.service';\n\n@Component({\n  selector: 'app-new-room-dialog',\n  templateUrl: './new-room-dialog.component.html',\n  styleUrls: ['./new-room-dialog.component.scss']\n})\nexport class NewRoomDialogComponent implements OnInit {\n\n  newRoomForm: FormGroup;\n\n  constructor(@Inject(FormBuilder) public fb: FormBuilder, private dialog: MatDialog, private firestore: FirestoreService) {\n    this.newRoomForm = fb.group({\n      'room_name': [ '', [ Validators.required, Validators.maxLength(17), Validators.minLength(5) ] ],\n      'num_participants': [ '', [ Validators.required, Validators.max(50) ] ],\n      'room_password': [ '', [ Validators.required, Validators.minLength(3), Validators.maxLength(6) ] ],\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  get room_name() {\n    return this.newRoomForm.controls.room_name.errors;\n  }\n\n  get num_participants() {\n    return this.newRoomForm.controls.num_participants.errors;\n  }\n\n  get room_password() {\n    return this.newRoomForm.controls.room_password.errors;\n  }\n\n  onSubmit() {\n    if (this.newRoomForm.invalid) return;\n    this.firestore.createNewRoom(this.newRoomForm.value);\n    this.dialog.closeAll();\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({\n  name: 'timestamp'\n})\nexport class TimestampPipe implements PipeTransform {\n\n  transform(unix: number, args?: any): any {\n    const newDate = new Date(unix*1000);;\n    const timestamp = moment(newDate).fromNow();\n\n    return timestamp;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { MainComponent } from './main/main.component';\n\nimport { DashboardResolver } from './dashboard.resolver';\nimport { RoomGuard } from '../common/core/services/route-guard.service';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, resolve: { user: DashboardResolver },  children: [\n    { path: '', component: MainComponent },\n    { path: 'room', loadChildren: './chat-room/chat-room.module#ChatRoomModule', canActivate: [ RoomGuard ] },\n    { path: 'profile', loadChildren: './profile/profile.module#ProfileModule' },\n    { path: 'preferences', loadChildren: './preferences/preferences.module#PreferencesModule' },\n  ] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","module.exports = \"<mat-drawer-container>\\n\\n  <mat-drawer #drawer>\\n\\n    <div *ngIf=\\\"isDrawerOpened\\\">\\n      <app-drawer-content></app-drawer-content>\\n    </div>\\n\\n  </mat-drawer>\\n\\n  <div id=\\\"drawer-content\\\">\\n\\n    <mat-toolbar *ngIf=\\\"!isChatMode\\\">\\n\\n      <span>\\n        <button mat-icon-button (click)=\\\"drawer.toggle()\\\" id=\\\"menu\\\">\\n          <mat-icon>menu</mat-icon>\\n        </button>\\n      </span>\\n\\n      <span [routerLink]=\\\"['/', 'dashboard']\\\">Dark Messenger</span>\\n\\n      <span [ngClass]=\\\"{ 'add': !inOtherRoute }\\\">\\n        <button mat-icon-button (click)=\\\"newRoom()\\\"[ngStyle]=\\\"{ 'display': inOtherRoute ? 'none' : 'block' }\\\" [disabled]=\\\"isAnonymous\\\">\\n          <mat-icon>add_box</mat-icon>\\n        </button>\\n      </span>\\n\\n      <span [ngClass]=\\\"{ 'add': inOtherRoute }\\\">\\n        <button mat-icon-button [routerLink]=\\\"['/', 'dashboard']\\\" [ngStyle]=\\\"{ 'display': !inOtherRoute ? 'none' : 'block' }\\\" [disabled]=\\\"isAnonymous\\\">\\n          <mat-icon>dashboard</mat-icon>\\n        </button>\\n      </span>\\n\\n      <span>\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"settings\\\" id=\\\"settings\\\">\\n          <mat-icon>settings</mat-icon>\\n        </button>\\n      </span>\\n\\n    </mat-toolbar>\\n\\n    <div id=\\\"content-container\\\" [ngStyle]=\\\"{ 'padding-top': !isChatMode ? '11vh' : '0' }\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n\\n  </div>\\n\\n</mat-drawer-container>\\n\\n<mat-menu #settings>\\n  <button mat-menu-item (click)=\\\"onProfile()\\\" [disabled]=\\\"isAnonymous\\\">\\n    <mat-icon>face</mat-icon>\\n    Profile\\n  </button>\\n  <button mat-menu-item (click)=\\\"onPreferences()\\\" [disabled]=\\\"isAnonymous\\\">\\n    <mat-icon>account_circle</mat-icon>\\n    Preferences\\n  </button>\\n  <button mat-menu-item (click)=\\\"onSignout()\\\">\\n    <mat-icon>power_settings_new</mat-icon>\\n    Logout\\n  </button>\\n</mat-menu>\\n\"","module.exports = \".mat-drawer {\\n  width: 70vw; }\\n\\n#drawer-content {\\n  height: 100vh; }\\n\\n#drawer-content .mat-toolbar {\\n    position: fixed;\\n    display: flex;\\n    z-index: 2; }\\n\\n#drawer-content .mat-toolbar span {\\n      display: flex; }\\n\\n#drawer-content .mat-toolbar #menu {\\n      margin-right: 5px; }\\n\\n#drawer-content .mat-toolbar .add {\\n      margin-left: auto; }\\n\\n#drawer-content .mat-toolbar #settings {\\n      margin-left: 1vw; }\\n\"","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { MatDialog, MatDialogRef, MatDrawer } from '@angular/material';\nimport * as _ from \"lodash\";\n\nimport { AuthService } from '../common/core/services/auth.service';\nimport { FirestoreService } from '../common/core/services/firestore.service';\nimport { SharedService } from '../common/core/services/shared.service';\n\nimport { NewRoomDialogComponent } from '../common/shared/components/new-room-dialog/new-room-dialog.component';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  @ViewChild('drawer') drawer: MatDrawer;\n\n  newRoomDialogComponent: MatDialogRef<NewRoomDialogComponent>;\n  inOtherRoute: boolean = false;\n  isChatMode: boolean = false;\n  isDrawerOpened: boolean = false;\n  isAnonymous: boolean = false;\n\n  constructor(private router: Router, private dialog: MatDialog, private route: ActivatedRoute, private authService: AuthService, private firestore: FirestoreService, private auth: AuthService, private sharedService: SharedService) { }\n\n  ngOnInit() {\n\n    this.isChatMode = false;\n\n    this.router.events.filter(e => e instanceof NavigationEnd).subscribe((response: NavigationEnd) => {\n      const route = response.urlAfterRedirects.split('/').slice(1);\n      const isinRoom = route.includes('room');\n      this.isChatMode = isinRoom ? true : false;\n    });\n\n    this.sharedService.modeChanged.subscribe((response) => {\n      setTimeout(() => (this.isChatMode = response), 50);\n    });\n\n    this.router.events.filter(e => e instanceof NavigationEnd).subscribe((response: NavigationEnd) => {\n      const route = response.urlAfterRedirects.split('/').slice(1);\n      const isinRoom = route.includes('room');\n\n      const a = route.includes('room');\n      const b = route.includes('profile');\n      const c = route.includes('preferences');\n      this.inOtherRoute = a || b || c;\n    });\n\n    this.drawer.openedStart.subscribe(() => {\n      this.isDrawerOpened = true;\n    });\n\n    this.drawer.closedStart.subscribe(() => {\n      this.isDrawerOpened = false;\n    });\n\n    this.route.data.subscribe((data) => {\n      this.isAnonymous = data.user;\n    });\n\n    // this.firestore.removeAnonymousData();\n\n  }\n\n  onProfile() {\n    this.router.navigate(['profile'], { relativeTo: this.route });\n  }\n\n  onPreferences() {\n    this.router.navigate(['preferences'], { relativeTo: this.route });\n  }\n\n  newRoom() {\n    this.newRoomDialogComponent = this.dialog.open(NewRoomDialogComponent, {\n      data: { }\n    });\n  }\n\n  onSignout() {\n\n    this.firestore.setUserStatus(false, false);\n\n  }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { Material2Module } from '../common/core/modules/material2.module';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { MainComponent } from './main/main.component';\nimport { DrawerContentComponent } from './drawer-content/drawer-content.component';\n\nimport { NewRoomDialogComponent } from '../common/shared/components/new-room-dialog/new-room-dialog.component';\nimport { JoinRoomConfirmationDialogComponent } from '../common/shared/components/join-room-confirmation-dialog/join-room-confirmation-dialog.component';\n\nimport { TimestampPipe } from '../common/shared/pipes/timestamp4.pipe';\n\nimport { DashboardResolver } from './dashboard.resolver';\nimport { RoomGuard } from '../common/core/services/route-guard.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    DashboardRoutingModule,\n    Material2Module\n  ],\n  entryComponents: [\n    NewRoomDialogComponent,\n    JoinRoomConfirmationDialogComponent\n  ],\n  declarations: [\n    DashboardComponent,\n    MainComponent,\n    DrawerContentComponent,\n    NewRoomDialogComponent,\n    JoinRoomConfirmationDialogComponent,\n    TimestampPipe\n  ],\n  providers: [\n    DashboardResolver,\n    RoomGuard\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class DashboardModule { }\n","module.exports = \"<mat-list>\\n\\n  <h3 mat-subheader>Online Users</h3>\\n  <mat-list-item *ngFor=\\\"let onlineUser of (onlineUsers | async); last as isLast\\\">\\n    <img mat-list-avatar src=\\\"{{ onlineUser?.url }}\\\">\\n    <h4 mat-line *ngIf=\\\"onlineUser?.metadata?.status === 'online'\\\"><img src=\\\"https://upload.wikimedia.org/wikipedia/commons/d/dc/Button-Green.svg\\\" alt=\\\"\\\" width=\\\"10\\\"> {{ onlineUser?.display }}</h4>\\n    <h4 mat-line *ngIf=\\\"onlineUser?.metadata?.status === 'offline'\\\"><img src=\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fd/Location_dot_grey.svg/2000px-Location_dot_grey.svg.png\\\" alt=\\\"\\\" width=\\\"10\\\"> {{ onlineUser?.display }}</h4>\\n    <p mat-line>\\n      <span *ngIf=\\\"onlineUser?.metadata?.status === 'online'\\\">Online -- </span>\\n      <span *ngIf=\\\"onlineUser?.metadata?.status === 'offline'\\\">Offline -- </span>\\n      <span class=\\\"demo-secondary-text\\\">{{ onlineUser?.metadata?.timestamp | timestamp }}</span>\\n    </p>\\n    <mat-divider inset *ngIf=\\\"!isLast\\\"></mat-divider>\\n  </mat-list-item>\\n\\n</mat-list>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { FirestoreService } from '../../common/core/services/firestore.service';\n\n@Component({\n  selector: 'app-drawer-content',\n  templateUrl: './drawer-content.component.html',\n  styleUrls: ['./drawer-content.component.scss']\n})\nexport class DrawerContentComponent implements OnInit {\n\n  onlineUsers: Observable<any>;\n\n  constructor(private firestore: FirestoreService) { }\n\n  ngOnInit() {\n    this.onlineUsers = this.firestore.onlineUsers\n  }\n\n}\n","module.exports = \"<mat-card>\\n  <mat-card-content>\\n    <div>\\n      <span>Public Room</span><br>\\n    </div>\\n    <button mat-icon-button color=\\\"accent\\\" (click)=\\\"onEnterPublic()\\\">\\n      <mat-icon>keyboard_arrow_right</mat-icon>\\n    </button>\\n  </mat-card-content>\\n</mat-card>\\n\\n<hr>\\n\\n<div *ngFor=\\\"let room of (rooms | async)\\\">\\n  <mat-card>\\n    <mat-card-content>\\n      <div>\\n        <span>{{ room.room_name }}</span><br>\\n      </div>\\n      <button mat-icon-button color=\\\"accent\\\" (click)=\\\"onEnterRoom(room)\\\" [disabled]=\\\"isAnonymous\\\">\\n        <mat-icon>keyboard_arrow_right</mat-icon>\\n      </button>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\"","module.exports = \"div {\\n  display: flex; }\\n\\nhr {\\n  width: 80vw;\\n  background: #6c6c6c; }\\n\\n.mat-card {\\n  width: 80vw;\\n  margin: auto;\\n  margin-bottom: 3vh; }\\n\\n.mat-card .mat-card-content {\\n    display: flex;\\n    justify-content: space-between; }\\n\\n.mat-card .mat-card-content div {\\n      display: flex; }\\n\\n.mat-card .mat-card-content div span {\\n        margin: auto; }\\n\\n.mat-card .mat-card-content .mat-raised-button {\\n      height: auto; }\\n\\n.mat-card .mat-card-content .mat-raised-button span {\\n        line-height: normal; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { Subscription } from 'rxjs/Subscription';\nimport { interval } from 'rxjs/observable/interval';\nimport { take } from 'rxjs/operators';\n\nimport { FirestoreService } from '../../common/core/services/firestore.service';\nimport { SharedService } from '../../common/core/services/shared.service';\n\nimport { JoinRoomConfirmationDialogComponent } from '../../common/shared/components/join-room-confirmation-dialog/join-room-confirmation-dialog.component';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit, OnDestroy {\n\n  joinRoomConfirmationDialog: MatDialogRef<JoinRoomConfirmationDialogComponent>;\n  rooms: Observable<any>;\n  interval: Subscription;\n  isAnonymous: boolean = false;\n\n  constructor(private router: Router, private route: ActivatedRoute, private dialog: MatDialog, private firestore: FirestoreService, private sharedService: SharedService) { }\n\n  ngOnInit() {\n    this.sharedService.setEnter = false;\n\n    this.rooms = this.firestore.rooms;\n\n    this.route.data.subscribe((data) => {\n      this.isAnonymous = data.user;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.interval === undefined) return;\n    this.interval.unsubscribe();\n  }\n\n  onEnterRoom(room: any) {\n    this.sharedService.setEnter = true;\n\n    let i = 0;\n    this.joinRoomConfirmationDialog = this.dialog.open(JoinRoomConfirmationDialogComponent, { data: { room } });\n    this.joinRoomConfirmationDialog.afterClosed().subscribe((response: any) => {\n\n      if (response !== true) return;\n      this.interval = interval(1).subscribe(() => {\n        this.routeToRoom(room);\n      });\n\n      this.router.events.filter(e => e instanceof NavigationEnd).subscribe((response: NavigationEnd) => {\n        const route = response.urlAfterRedirects.split('/').slice(1);\n        const isinRoom = route.includes('room');\n        this.interval.unsubscribe();\n        if (isinRoom && i === 0) {\n          this.firestore.currentUser.subscribe((user) => {\n            this.firestore.newRoomParticipant(user, room);\n          });\n          i++;\n        }\n      });\n\n    });\n  }\n\n  onEnterPublic() {\n    this.sharedService.setEnter = true;\n    \n    const publicRoom = { host: { display: \"Admin\", email: \"q@a.com\", uid: \"DuEEQD2s9cbYol48a0xcfxVyE1Z2\" }, num_participants: Infinity, room_name: \"Public Room\" };\n    this.sharedService.roomDetails = publicRoom;\n    this.interval = interval(1).subscribe(() => {\n      this.routeToRoom(publicRoom);\n    });\n\n    let i = 0;\n    this.router.events.filter(e => e instanceof NavigationEnd).subscribe((response: NavigationEnd) => {\n      const route = response.urlAfterRedirects.split('/').slice(1);\n      const isinRoom = route.includes('room');\n      this.interval.unsubscribe();\n      if (isinRoom && i === 0) {\n        this.firestore.currentUser.subscribe((user) => {\n          this.firestore.newRoomParticipant(user, publicRoom);\n        });\n        i++;\n      }\n    });\n  }\n\n  routeToRoom(room: any) {\n    this.sharedService.roomDetails = room;\n    this.router.navigate(['room'], { relativeTo: this.route });\n  }\n\n}\n"],"sourceRoot":""}