{"version":3,"sources":["webpack:///./src/app/common/shared/components/room-details-dialog/room-details-dialog.component.html","webpack:///./src/app/common/shared/components/room-details-dialog/room-details-dialog.component.scss","webpack:///./src/app/common/shared/components/room-details-dialog/room-details-dialog.component.ts","webpack:///./src/app/common/shared/pipes/timestamp.pipe.ts","webpack:///./src/app/dashboard/chat-room/chat-room-routing.module.ts","webpack:///./src/app/dashboard/chat-room/chat-room.component.html","webpack:///./src/app/dashboard/chat-room/chat-room.component.scss","webpack:///./src/app/dashboard/chat-room/chat-room.component.ts","webpack:///./src/app/dashboard/chat-room/chat-room.module.ts","webpack:///./src/app/dashboard/chat-room/chat-room.resolver.ts"],"names":[],"mappings":"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","file":"chat-room-chat-room-module.js","sourcesContent":["module.exports = \"<div id=\\\"container\\\">\\n\\n  <p><strong>Room name: </strong> <span>{{ data.room.room_name }}</span></p>\\n\\n  <div *ngIf=\\\"condition; else option\\\">\\n    <p><strong>Created by: </strong> <span>{{ data.room.host.display }}</span></p>\\n    <p class=\\\"m-0\\\"><strong>Created: </strong> <span>{{ data.room.timestamp | timestamp }}</span></p>\\n  </div>\\n\\n  <ng-template #option>\\n    <p class=\\\"m-0\\\"><strong>Created by: </strong> <span>{{ data.room.host.display }}</span></p>\\n  </ng-template>\\n\\n</div>\\n\"","module.exports = \"#container {\\n  width: 50vw; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-room-details-dialog',\n  templateUrl: './room-details-dialog.component.html',\n  styleUrls: ['./room-details-dialog.component.scss']\n})\nexport class RoomDetailsDialogComponent implements OnInit {\n\n  condition: boolean;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.condition = this.data.room.num_participants !== Infinity;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({\n  name: 'timestamp'\n})\nexport class TimestampPipe implements PipeTransform {\n\n  transform(unix: number, args?: any): any {\n    const newDate = new Date(unix*1000);;\n    const timestamp = moment(newDate).fromNow();\n\n    return timestamp;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatRoomResolver } from './chat-room.resolver';\n\nimport { ChatRoomComponent } from './chat-room.component';\n\nconst routes: Routes = [\n  { path: '', component: ChatRoomComponent, resolve: { room: ChatRoomResolver }, children: [\n    { path: '', loadChildren: './participants/participants.module#ParticipantsModule' }\n  ] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChatRoomRoutingModule { }\n","module.exports = \"<mat-drawer-container>\\n\\n  <mat-drawer #drawer>\\n\\n    <router-outlet></router-outlet>\\n\\n  </mat-drawer>\\n\\n\\n  <div id=\\\"drawer-content\\\">\\n\\n    <div id=\\\"content-toolbar\\\">\\n\\n      <mat-toolbar>\\n        <span id=\\\"menu\\\">\\n          <button mat-icon-button (click)=\\\"drawer.toggle()\\\">\\n            <mat-icon>menu</mat-icon>\\n          </button>\\n        </span>\\n\\n        <div *ngIf=\\\"roomDetails.room_name !== 'Public Room'; else default\\\">\\n          <span>{{ roomDetails.room_name }}'s room</span>\\n        </div>\\n\\n        <ng-template #default>\\n          <span>{{ roomDetails.room_name }}</span>\\n        </ng-template>\\n\\n        <span id=\\\"details\\\">\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n            <mat-icon>settings</mat-icon>\\n          </button>\\n        </span>\\n      </mat-toolbar>\\n\\n    </div>\\n\\n    <div id=\\\"content-container\\\">\\n\\n      <div id=\\\"chat-container\\\">\\n        <div id=\\\"chat\\\" #content>\\n\\n          <div *ngFor=\\\"let message of (messages | async); let i = index\\\" id=\\\"loop\\\">\\n            <div [ngClass]=\\\"{ 'you': auth.uid !== message?.uid, 'others': auth.uid === message?.uid }\\\" id=\\\"element\\\">\\n              <div id=\\\"message-content\\\">\\n\\n                <div id=\\\"img\\\" *ngIf=\\\"auth.uid !== message?.uid\\\">\\n                  <img src=\\\"{{ message?.url }}\\\" alt=\\\"god-madara-uchiha\\\" width=\\\"50\\\" height=\\\"50\\\" (click)=\\\"onShowProfile(message)\\\">\\n                </div>\\n                <div id=\\\"message\\\">\\n                  <p>{{ message?.message }}</p>\\n                </div>\\n                <div id=\\\"img\\\" *ngIf=\\\"auth.uid === message?.uid\\\">\\n                  <img src=\\\"{{ message?.url }}\\\" alt=\\\"god-madara-uchiha\\\" width=\\\"50\\\" height=\\\"50\\\" (click)=\\\"onShowProfile(message)\\\">\\n                </div>\\n              </div>\\n              <div id=\\\"message-action\\\">\\n                <span>{{ message?.timestamp | timestamp }}</span>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div id=\\\"chat-textbox\\\">\\n\\n        <div class=\\\"w-100\\\">\\n          <mat-form-field color=\\\"accent\\\" class=\\\"w-100\\\">\\n            <textarea #message matInput placeholder=\\\"Type a message.\\\" matTextareaAutosize matAutosizeMaxRows=\\\"1\\\" maxLength=\\\"500\\\" [(ngModel)]=\\\"textarea\\\"></textarea>\\n            <mat-hint align=\\\"end\\\">{{message.value.length}} / 500</mat-hint>\\n          </mat-form-field>\\n        </div>\\n\\n        <div id=\\\"send\\\">\\n          <button mat-icon-button (click)=\\\"onSubmit()\\\">\\n            <mat-icon>send</mat-icon>\\n          </button>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n</mat-drawer-container>\\n\\n<mat-menu #menu>\\n  <button mat-menu-item (click)=\\\"seeRoomDetails()\\\">\\n    <mat-icon>info</mat-icon>\\n    Room details\\n  </button>\\n  <button mat-menu-item [routerLink]=\\\"['/', 'dashboard']\\\">\\n    <mat-icon>close</mat-icon>\\n    Leave room\\n  </button>\\n</mat-menu>\\n\"","module.exports = \".mat-drawer {\\n  width: 70vw; }\\n\\n#drawer-content {\\n  height: 100vh; }\\n\\n#drawer-content .mat-toolbar {\\n    display: flex; }\\n\\n#drawer-content .mat-toolbar span {\\n      display: flex; }\\n\\n#drawer-content .mat-toolbar #menu {\\n      margin-right: 5px; }\\n\\n#drawer-content .mat-toolbar #details {\\n      margin-left: auto; }\\n\\n#drawer-content #content-container #chat-container {\\n    height: 79vh; }\\n\\n#drawer-content #content-container #chat-container #chat {\\n      height: 100%;\\n      width: 100vw;\\n      overflow: auto; }\\n\\n#drawer-content #content-container #chat-container #chat #loop {\\n        display: flex;\\n        flex-flow: column nowrap; }\\n\\n#drawer-content #content-container #chat-textbox {\\n    height: 12vh;\\n    display: flex; }\\n\\n#drawer-content #content-container #chat-textbox .mat-form-field {\\n      flex-grow: 1;\\n      border: 1px solid white;\\n      border-radius: 10px;\\n      padding: 5px;\\n      margin-left: 3vw; }\\n\\n#drawer-content #content-container #chat-textbox #send {\\n      display: flex;\\n      width: 18vw; }\\n\\n#drawer-content #content-container #chat-textbox #send .mat-icon-button {\\n        margin: auto auto auto 2vw; }\\n\\n#drawer-content #content-container #chat-textbox .mat-icon {\\n      font-size: 2.5em; }\\n\\n.you {\\n  padding: 1vh 2vh;\\n  width: 90vw;\\n  align-self: flex-start; }\\n\\n.you #message-content {\\n    display: flex; }\\n\\n.you #message-content img {\\n      border-radius: 100%;\\n      margin-right: 2vw; }\\n\\n.you #message-content #message {\\n      background: #050505;\\n      padding: 1vh 2vh;\\n      border-radius: 3%;\\n      font-size: 0.8em;\\n      width: 100%; }\\n\\n.you #message-content #message p {\\n        margin: 0; }\\n\\n.you span {\\n    float: right;\\n    color: #707070;\\n    font-size: 0.8em; }\\n\\n.others {\\n  padding: 1vh 2vh;\\n  width: 90vw;\\n  align-self: flex-end; }\\n\\n.others #message-content {\\n    display: flex; }\\n\\n.others #message-content img {\\n      border-radius: 100%;\\n      margin-left: 2vw; }\\n\\n.others #message-content #message {\\n      background: #050505;\\n      padding: 1vh 2vh;\\n      border-radius: 3%;\\n      font-size: 0.8em;\\n      width: 100%; }\\n\\n.others #message-content #message p {\\n        margin: 0; }\\n\\n.others span {\\n    color: #707070;\\n    font-size: 0.8em; }\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute, Data } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { MatDrawer, MatDialog } from '@angular/material';\n\nimport { FirestoreService } from '../../common/core/services/firestore.service';\nimport { AuthService } from '../../common/core/services/auth.service';\nimport { SharedService } from '../../common/core/services/shared.service';\n\nimport { Room } from '../../common/shared/models/model';\n\nimport { RoomDetailsDialogComponent } from '../../common/shared/components/room-details-dialog/room-details-dialog.component';\n\n@Component({\n  selector: 'app-chat-room',\n  templateUrl: './chat-room.component.html',\n  styleUrls: ['./chat-room.component.scss']\n})\nexport class ChatRoomComponent implements OnInit {\n\n  @ViewChild('drawer') drawer: MatDrawer;\n  @ViewChild('content') content: ElementRef;\n\n  messages: Observable<any>;\n  roomDetails: Room;\n  textarea: string = '';\n  element: Element;\n  condition: boolean;\n\n  constructor(private router: Router, private route: ActivatedRoute, private dialog: MatDialog, private firestore: FirestoreService, private auth: AuthService, private sharedService: SharedService) { }\n\n  ngOnInit() {\n\n    this.dialog.closeAll();\n\n    this.route.data.subscribe((data: Data) => {\n      this.roomDetails = data.room;\n    });\n\n    this.condition = this.roomDetails.num_participants === Infinity;\n\n    this.sharedService.modeValue = true;\n    this.messages = this.firestore.messages(this.roomDetails.room_name);\n\n    this.element = this.content.nativeElement;\n    setTimeout(() => this.scrollToBottom(), 700);\n\n  }\n\n  scrollToBottom() {\n    this.element.scrollTop = this.element.scrollHeight;\n  }\n\n  seeRoomDetails() {\n    this.dialog.open(RoomDetailsDialogComponent, { data: { room: this.roomDetails } });\n  }\n\n  onShowProfile(message: any) {\n    this.firestore.profile(message.uid);\n  }\n\n  onSubmit() {\n\n    if (this.textarea.length < 1) {\n      alert('Empty field');\n      return;\n    }\n\n    this.firestore.newMessage(this.textarea, this.roomDetails.room_name)\n      .then(() => {\n        this.scrollToBottom();\n      });\n    this.textarea = '';\n\n  }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { ChatRoomRoutingModule } from './chat-room-routing.module';\nimport { Material2Module } from '../../common/core/modules/material2.module';\n\nimport { ChatRoomResolver } from './chat-room.resolver';\n\nimport { ChatRoomComponent } from './chat-room.component';\nimport { RoomDetailsDialogComponent } from '../../common/shared/components/room-details-dialog/room-details-dialog.component';\nimport { TimestampPipe } from '../../common/shared/pipes/timestamp.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ChatRoomRoutingModule,\n    Material2Module\n  ],\n  declarations: [\n    ChatRoomComponent,\n    RoomDetailsDialogComponent,\n    TimestampPipe\n  ],\n  entryComponents: [\n    RoomDetailsDialogComponent\n  ],\n  providers: [\n    ChatRoomResolver\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class ChatRoomModule { }\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { take } from 'rxjs/operators';\n\nimport { SharedService } from '../../common/core/services/shared.service';\n\n@Injectable()\nexport class ChatRoomResolver implements Resolve<any> {\n\n  constructor(private sharedService: SharedService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.sharedService.roomChanged.asObservable().pipe( take(1) );\n  }\n\n}\n"],"sourceRoot":""}